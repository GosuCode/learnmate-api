generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String
  password      String?
  googleId      String?  @unique
  avatar        String?
  authProvider  String   @default("local") // "local" or "google"
  emailVerified Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  contents Content[]

  @@map("users")
}

model Course {
  id          String    @id @default(uuid())
  slug        String    @unique
  name        String
  semester    Int
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  chapters    Chapter[] // Relation to chapters/units
}

model Chapter {
  id            String   @id @default(uuid())
  course        Course   @relation(fields: [courseId], references: [id])
  courseId      String
  chapterNumber Int
  slug          String
  title         String
  content       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([courseId, chapterNumber])
  @@unique([courseId, slug])
}

model Content {
  id        String   @id @default(cuid())
  userId    String
  title     String
  content   String   @db.Text
  type      String // 'text' | 'pdf' | 'url'
  category  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("contents")
}

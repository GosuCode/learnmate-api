generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String
  password      String?
  googleId      String?  @unique
  avatar        String?
  authProvider  String   @default("local") // "local" or "google"
  emailVerified Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  contents Content[]

  @@map("users")
}

model Semester {
  id        String    @id @default(cuid())
  name      String    @unique
  code      String    @unique //eg: SEM1
  subjects  Subject[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Subject {
  id         String    @id @default(cuid())
  name       String    @unique
  code       String    @unique
  semester   Semester  @relation(fields: [semesterId], references: [id])
  semesterId String
  contents   Content[] // chapters, topics, summaries
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Content {
  id          String         @id @default(cuid())
  title       String
  slug        String         @unique
  type        ContentType
  description String?
  subject     Subject        @relation(fields: [subjectId], references: [id])
  subjectId   String
  parent      Content?       @relation("ContentToContent", fields: [parentId], references: [id])
  parentId    String?
  children    Content[]      @relation("ContentToContent")
  blocks      ContentBlock[]
  tags        String[]
  published   Boolean        @default(false)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  createdById String
  createdBy   User           @relation(fields: [createdById], references: [id])
}

model ContentBlock {
  id        String    @id @default(cuid())
  type      BlockType
  text      String?
  fileUrl   String? // e.g., PDF, image, video
  order     Int
  contentId String
  content   Content   @relation(fields: [contentId], references: [id])
}

enum ContentType {
  course
  chapter
  topic
}

enum BlockType {
  text
  pdf
  image
  video
  code
}
